class A{

}
class B extends A{

}
A ob1 = new A(); possible
B ob2 = new B(); possible

A ob3 = new B(); possible
B ob4 = new A(); not possible(possible only if you down cast it, B ob4 = (B) new A() )
B ob4 = (B) new A(); possible


class Computer {
    public void show() {
        System.out.println("in show Computer");
    }
}

class Laptop extends Computer {
    public void show() {
        System.out.println("in show Laptop");
    }
}

public class MethodOverriding {
    public static void main(String a[]) {
        Computer ob1 = new Computer();
        ob1.show(); // prints in show Computer
        ob1.computerHide(); // prints in show Computer
        //ob1.laptopHide(); // not possible because computer doesn't know about laptop

        Computer ob2 = new Laptop(); //upcasting(parent reference with child object)
        ob2.show(); // prints in show Laptop
        ob2.computerHide(); // prints in hide Computer
        //ob2.laptopHide(); // not possible because computer doesn't know about laptop

        Laptop ob3 = new Laptop();
        ob3.show(); // prints in show Laptop
        ob3.computerHide(); // prints in hide Computer
        ob3.laptopHide(); // prints in hide laptop

	Laptop ob4 = (Laptop) ob1; // downcasting(reference is of child but the object is parent)
        ob4.computerHide();
        ob4.laptopHide();

	Laptop ob5 = (Laptop) new Computer(); // downcasting(reference is of child but the object is parent)

    }
}

the refernce type should either be the same as the object type or it's parent.
the referece type is of child and object is parent is not possible

In case of method overriding(having same methods in the parent and child)
whatever the reference type is: incase of method overriding, it is determined by the type of object and method inside it will be executed

In case of different methods:
parent refernce type will only know about the methods in the parent
child reference type will know about the methods of both parent and child


// class Computer
// {
//	
// }
// class Laptop extends Computer
// {
//	
// }

class A
{
	public void show()
	{
		System.out.println("in A show");
	}
}

class B extends A
{
	public void show()
	{
		System.out.println("in B show");
	}
}

class C extends A
{
	public void show()
	{
		System.out.println("in C show");
	}
}

class D
{
	
}


public class Demo{
	public static void main(String[] args) {
//		A obj=new B();
//		obj.show();
		
		A obj=new A();
		obj.show();
		
		obj=new B();
		obj.show();
		
		obj=new C();
		obj.show();
		
//		obj=new D();
		
//		Laptop obj1=new Laptop();
//		Computer obj1=new Laptop();
	
	}
}
